1539. Kth Missing Positive Number
Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.

Return the kth positive integer that is missing from this array.

Input: arr = [2,3,4,7,11], k = 5
Output: 9
Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.
Example 2:

Input: arr = [1,2,3,4], k = 2
Output: 6
Explanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.

class Solution:
    def findKthPositive(self, arr: List[int], k: int) -> int:
        #sorted! binary search bitches 
        # looking for num of positive ints before k

        # [1,5,8]  / 4 , return 6
        
        floor = 0
        ceil = len(arr) - 1
        while floor <= ceil:
            mid = floor + (ceil-floor) // 2 
            if arr[mid] - mid <= k:
                floor = mid + 1
            else:
                ceil = mid - 1
            
        return floor + k

        '''
        lame, i didnt even get this...
        for num in arr:
            if num <= k:
                k += 1
            elif num > k:
                break 
        
        return k
        '''
