Intersection of Three Sorted Arrays

Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order, return a sorted array of only the integers that appeared in all three arrays.

Example 1:

Input: arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
Output: [1,5]
Explanation: Only 1 and 5 appeared in the three arrays.
Example 2:

Input: arr1 = [197,418,523,876,1356], arr2 = [501,880,1593,1710,1870], arr3 = [521,682,1337,1395,1764]
Output: []

class Solution:
    def arraysIntersection(self, arr1: List[int], arr2: List[int], arr3: List[int]) -> List[int]:
        #iterate thru first then binary search the other 2 
        allNums = [] 

        for i, num in enumerate(arr1):
            matched = [] # size max is 2
            for arr in [arr2, arr3]:
                floor = 0
                ceil = len(arr)-1
                while floor <= ceil: 
                    mid = floor + (ceil-floor) // 2
                    if arr[mid] < num:
                        floor = mid + 1
                    elif arr[mid] > num:
                        ceil = mid - 1
                    else:
                        matched.append(num)
                        break

            if len(matched) == 2:
                allNums.append(num)

        return allNums
