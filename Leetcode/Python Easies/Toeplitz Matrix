Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.

A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.

Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True.

        # every element on diagon is the same 
        # calculate diagonal as we iterate, then check 
        # check within bounds of matrix, just start at 1 instead of 0, 
        # then check backwards
        # if those eles are the same, if not, false 
        # after entire iterate, return true
        # o(n * m) time, constant space

class Solution:
    def isToeplitzMatrix(self, matrix: List[List[int]]) -> bool:
        if not len(matrix):
            return False

        for r in range(1, len(matrix)):
            for c in range(1, len(matrix[0])):
                if matrix[r][c] != matrix[r-1][c-1]:
                    return False 
        
        return True
