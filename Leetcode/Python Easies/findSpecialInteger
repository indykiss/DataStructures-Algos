Element Appearing More Than 25% In Sorted Array
Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

Input: arr = [1,2,2,6,6,6,6,7,10]
Output: 6
Example 2:

Input: arr = [1,1]
Output: 1


class Solution:
    def findSpecialInteger(self, arr: List[int]) -> int:
        numsOfIdxAhead = len(arr) // 4

        for i, num in enumerate(arr):
            if i + numsOfIdxAhead < len(arr):
                if num == arr[i+numsOfIdxAhead]:
                    return num 
        
        return null
